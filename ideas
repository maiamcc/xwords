- when picking a word, maximize the choices for all remaining
- save previous board state, index/dir in question, possibilities for this index/dir (and pop off that list.)

--> store word list in a trie instead of a big list

### Loop until a puzzle is solved
solved = False
while not solved:
    g = simplegrid.make_blank_grid()
    solved = simplegrid.solve_incomplete_at_random(g)

func solve(grid):
    if complete:
        return grid
    else:
        for each empty space in grid, possibilities list == intersection of tries down & across
        for letter in possibilities:
            grid --> put that letter in
            solve(grid)


new_x = [wd.split(" ", 1)[0] for wd in xs if wd.find("-") == -1]
x = Trie()
for wd in new_x:
    x.add_word(wd)


